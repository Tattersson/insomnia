import * as i0 from '@angular/core';
import { Injectable, Component, Input, NgModule } from '@angular/core';
import { Observable } from 'rxjs';

class AngularTwitterTimelineService {
    constructor() {
        this.TWITTER_SCRIPT_ID = 'twitter-wjs';
        this.TWITTER_WIDGET_URL = 'https://platform.twitter.com/widgets.js';
    }
    loadScript() {
        return new Observable((observer) => {
            this.startScriptLoad();
            window['twttr'].ready((twttr) => {
                observer.next(twttr);
                observer.complete();
            });
        });
    }
    startScriptLoad() {
        window['twttr'] = (function (d, s, id, url) {
            let script, firstScriptEl = d.getElementsByTagName(s)[0], twitterScript = window['twttr'] || {};
            if (d.getElementById(id)) {
                return twitterScript;
            }
            script = d.createElement(s);
            script.id = id;
            script.src = url;
            firstScriptEl.parentNode.insertBefore(script, firstScriptEl);
            twitterScript._e = [];
            twitterScript.ready = function (f) {
                twitterScript._e.push(f);
            };
            return twitterScript;
        }(document, 'script', this.TWITTER_SCRIPT_ID, this.TWITTER_WIDGET_URL));
    }
}
AngularTwitterTimelineService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
AngularTwitterTimelineService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }] });

class AngularTwitterTimelineComponent {
    constructor(element, twitterTimelineService) {
        this.element = element;
        this.twitterTimelineService = twitterTimelineService;
        this.defaultOpts = {
            tweetLimit: 5
        };
        this.defaultData = {
            sourceType: 'url',
            url: 'https://twitter.com/mustafaer_dev',
            screenName: 'Mustafa ER'
        };
    }
    ngOnChanges() {
        if (this.data && this.data.sourceType) {
            switch (this.data.sourceType) {
                case 'url':
                    delete this.defaultData.screenName;
                    break;
                case 'profile':
                    delete this.defaultData.url;
                    break;
                default:
                    break;
            }
            this.loadTwitterWidget();
        }
    }
    loadTwitterWidget() {
        this.twitterTimelineService
            .loadScript()
            .subscribe({
            next: () => {
                let nativeElement = this.element.nativeElement;
                nativeElement.innerHTML = "";
                window['twttr']
                    .widgets
                    .createTimeline(Object.assign(Object.assign({}, this.defaultData), this.data), nativeElement, Object.assign(Object.assign({}, this.defaultOpts), this.opts))
                    .then(() => {
                })
                    .catch((error) => console.error(error));
            },
            error: (error) => console.error(error),
        });
    }
}
AngularTwitterTimelineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineComponent, deps: [{ token: i0.ElementRef }, { token: AngularTwitterTimelineService }], target: i0.ɵɵFactoryTarget.Component });
AngularTwitterTimelineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: AngularTwitterTimelineComponent, selector: "angular-twitter-timeline", inputs: { data: "data", opts: "opts" }, usesOnChanges: true, ngImport: i0, template: ``, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineComponent, decorators: [{
            type: Component,
            args: [{ selector: 'angular-twitter-timeline', template: `` }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AngularTwitterTimelineService }]; }, propDecorators: { data: [{
                type: Input
            }], opts: [{
                type: Input
            }] } });

class AngularTwitterTimelineModule {
}
AngularTwitterTimelineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AngularTwitterTimelineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineModule, declarations: [AngularTwitterTimelineComponent], exports: [AngularTwitterTimelineComponent] });
AngularTwitterTimelineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AngularTwitterTimelineModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        AngularTwitterTimelineComponent
                    ],
                    exports: [
                        AngularTwitterTimelineComponent
                    ]
                }]
        }] });

/*
 * Public API Surface of angular-twitter-timeline
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AngularTwitterTimelineComponent, AngularTwitterTimelineModule, AngularTwitterTimelineService };
//# sourceMappingURL=angular-twitter-timeline.mjs.map
//# sourceMappingURL=angular-twitter-timeline.mjs.map
